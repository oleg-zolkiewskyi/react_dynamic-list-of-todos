{"version":3,"sources":["types/TodoFiltered.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoFiltered","TodoList","todos","selectedTodoId","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","filter","setQuery","setFilter","value","onChange","target","NONE","ACTIVE","COMPLETED","placeholder","event","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","unSelectTodo","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","selectedTodo","filteredList","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d7377fc.chunk.js","sourcesContent":["export enum TodoFiltered {\n  NONE = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId?: number;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props>\n= ({ todos, selectedTodoId, setSelectedTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={classNames(\n            {\n              'has-background-info-light': selectedTodoId === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === todo.id\n                  ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodoFiltered } from '../../types/TodoFiltered';\n\ntype Props = {\n  query: string;\n  filter: string;\n  setFilter: React.Dispatch<React.SetStateAction<TodoFiltered>>;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  query, filter, setQuery, setFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={\n            ({ target }) => setFilter(target.value as TodoFiltered)\n          }\n        >\n          <option value={TodoFiltered.NONE}>All</option>\n          <option value={TodoFiltered.ACTIVE}>Active</option>\n          <option value={TodoFiltered.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  unSelectTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, unSelectTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                unSelectTodo();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { TodoFiltered } from './types/TodoFiltered';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState(TodoFiltered.NONE);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const filteredList = todos.filter(todo => todo.title.toLowerCase()\n    .includes(query.toLowerCase())).filter(todo => {\n    switch (filter) {\n      case TodoFiltered.ACTIVE:\n        return !todo.completed;\n      case TodoFiltered.COMPLETED:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filter}\n                setFilter={setFilter}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={filteredList}\n                    selectedTodoId={selectedTodo?.id}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          unSelectTodo={() => setSelectedTodo(null)}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}